/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NotificationDto, NotificationDto$ } from "./notificationdto.js";
import * as z from "zod";

export type FeedResponseDto = {
    data: Array<NotificationDto>;
    hasMore: boolean;
    page: number;
    pageSize: number;
    totalCount?: number | undefined;
};

/** @internal */
export namespace FeedResponseDto$ {
    export const inboundSchema: z.ZodType<FeedResponseDto, z.ZodTypeDef, unknown> = z.object({
        data: z.array(NotificationDto$.inboundSchema),
        hasMore: z.boolean(),
        page: z.number(),
        pageSize: z.number(),
        totalCount: z.number().optional(),
    });

    export type Outbound = {
        data: Array<NotificationDto$.Outbound>;
        hasMore: boolean;
        page: number;
        pageSize: number;
        totalCount?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FeedResponseDto> = z.object({
        data: z.array(NotificationDto$.outboundSchema),
        hasMore: z.boolean(),
        page: z.number(),
        pageSize: z.number(),
        totalCount: z.number().optional(),
    });
}
